@import url("https://fonts.googleapis.com/css?family=Anton");
@import url("https://fonts.googleapis.com/css?family=Open+Sans");
@import url("https://fonts.googleapis.com/css?family=Bangers");
@import url("https://fonts.googleapis.com/css?family=Anton");
@import url("https://fonts.googleapis.com/css?family=Open+Sans");
@import url("https://fonts.googleapis.com/css?family=Bangers");
@font-face {
  font-family: 'Ailerons';
  src: url("../fonts/Ailerons-Typeface.otf"); }

@font-face {
  font-family: 'Ailerons';
  src: url("../fonts/Ailerons-Typeface.otf"); }

body {
  font-size: 16px; }

.container-fluid {
  padding: 0; }

.hero {
  height: 100vh;
  background: linear-gradient(45deg, #ffc38d, #dc969e); }
  .hero h1 {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    -o-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    font-family: "Anton", sans-serif; }
    .hero h1 span {
      font-family: "Ailerons", sans-serif;
      color: #00546f;
      font-size: 2em; }
      @media screen and (min-width: 768px) {
        .hero h1 span {
          font-size: 1.2em; } }

#main .col-header {
  font-family: "Anton", sans-serif;
  font-size: 1.3em; }

#main #scr {
  height: 80vh; }
  #main #scr img {
    width: 100%; }

#main #photon {
  height: 80vh; }
  #main #photon img {
    width: 100%; }

#main #web {
  height: 80vh; }

#main #web-images img {
  margin-left: 50%;
  transform: translateX(-50%); }

#main #scr > .col-md-6:nth-child(1) {
  background: linear-gradient(-45deg, #32a8d3, #0053ce); }

#main #photon > .col-md-6:nth-child(2) {
  background: linear-gradient(45deg, #f16200, #ff005d);
  padding: 10px 0; }

#main #web > .col-md-6:nth-child(1) {
  background: linear-gradient(45deg, #00ffaf, #00a32a); }

#main #robotics > .col-md-6:nth-child(2) {
  background: linear-gradient(-45deg, #7500ff, #e040fb);
  padding: 20px 0; }

#main .row {
  display: table-row; }
  #main .row .col-md-6 {
    display: table-cell;
    vertical-align: middle;
    width: 50%; }

#main #robotics-img-cont img {
  display: block;
  margin: 0 auto; }

#resume-div {
  display: flex;
  align-items: center;
  padding: 1.5em 0;
  background: linear-gradient(45deg, #5cee68, #e5c200); }
  #resume-div div {
    font-family: "Ailerons", sans-serif;
    font-size: 1.5em;
    text-align: center; }

#footer {
  background: linear-gradient(45deg, #00759b, #a72e8b); }
  #footer img {
    width: 25%;
    margin-left: 50%;
    -webkit-transform: translateX(-50%);
    -moz-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    -o-transform: translateX(-50%);
    transform: translateX(-50%); }
  #footer .helper {
    display: inline-block;
    height: 100%;
    vertical-align: middle; }

#resume-page .jumbotron {
  -webkit-border-radius: 0px;
  -moz-border-radius: 0px;
  border-radius: 0px;
  background: linear-gradient(45deg, #00759b, #a72e8b); }
  #resume-page .jumbotron div {
    font-family: "Ailerons", sans-serif;
    color: #FDFFFC;
    font-size: 2.5em;
    text-align: center; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
