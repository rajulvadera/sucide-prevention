@import url("https://fonts.googleapis.com/css?family=Anton");
@import url("https://fonts.googleapis.com/css?family=Open+Sans");
@import url("https://fonts.googleapis.com/css?family=Bangers");
@import url("https://fonts.googleapis.com/css?family=Anton");
@import url("https://fonts.googleapis.com/css?family=Open+Sans");
@import url("https://fonts.googleapis.com/css?family=Bangers");
@font-face {
  font-family: 'Ailerons';
  src: url("../fonts/Ailerons-Typeface.otf"); }

@font-face {
  font-family: 'Ailerons';
  src: url("../fonts/Ailerons-Typeface.otf"); }

body {
  font-size: 16px; }

.add {
  padding: 0; }

.hero {
  height: 100vh;
  background: linear-gradient(45deg, #ffc38d, #dc969e); }
  .hero h1 {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    -o-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    font-family: "Anton", sans-serif; }
    .hero h1 span {
      font-family: "Ailerons", sans-serif;
      color: #00546f;
      font-size: 2em; }
      @media screen and (min-width: 768px) {
        .hero h1 span {
          font-size: 1.2em; } }

.section-card .row {
  position: revert;
  height: inherit; }

.section-card img {
  width: 100%; }

.card {
  box-shadow: 5px 5px 7px #676767;
  font-family: "Open Sans", serif;
  background: linear-gradient(135deg, whitesmoke, white); }
  .card .card-img-base {
    padding: 15px; }
  .card img {
    width: 100%; }
  .card .card-title {
    font-family: "Anton", sans-serif;
    font-size: 2em; }
  .card .card-text {
    font-weight: 600; }
  .card .list-group-item {
    background: transparent; }

#scr .card-img-base {
  background: linear-gradient(-45deg, #32a8d3, #0053ce); }

#photon .card-img-base {
  background: linear-gradient(45deg, #f16200, #ff005d); }

#web .card-img-base {
  background: linear-gradient(45deg, #00ffaf, #00a32a); }

#web span {
  font-family: "Bangers", cursive;
  color: #00546f; }

.hey {
  font-family: "Bangers", cursive;
  color: #00546f; }

#robotics .card-img-base {
  background: linear-gradient(-45deg, #7500ff, #e040fb); }

#robotics span {
  font-family: "Bangers", cursive;
  color: #00546f; }

#robotics .carousel-item {
  height: 50vh; }
  #robotics .carousel-item img {
    width: 100%;
    position: absolute;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -moz-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    -o-transform: translateY(-50%);
    transform: translateY(-50%); }

#resume-div {
  display: flex;
  align-items: center;
  padding: 1.5em 0;
  background: linear-gradient(45deg, #5cee68, #e5c200); }
  #resume-div div {
    font-family: "Ailerons", sans-serif;
    font-size: 1.5em; }

#mobile-footer {
  background: linear-gradient(45deg, #00759b, #a72e8b); }
  #mobile-footer img {
    width: 100%;
    vertical-align: middle; }
  #mobile-footer .helper {
    display: inline-block;
    height: 100%;
    vertical-align: middle; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
